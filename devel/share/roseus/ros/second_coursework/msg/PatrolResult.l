;; Auto-generated. Do not edit!


(when (boundp 'second_coursework::PatrolResult)
  (if (not (find-package "SECOND_COURSEWORK"))
    (make-package "SECOND_COURSEWORK"))
  (shadow 'PatrolResult (find-package "SECOND_COURSEWORK")))
(unless (find-package "SECOND_COURSEWORK::PATROLRESULT")
  (make-package "SECOND_COURSEWORK::PATROLRESULT"))

(in-package "ROS")
;;//! \htmlinclude PatrolResult.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass second_coursework::PatrolResult
  :super ros::object
  :slots (_people_positions _cat_positions _dog_positions ))

(defmethod second_coursework::PatrolResult
  (:init
   (&key
    ((:people_positions __people_positions) ())
    ((:cat_positions __cat_positions) ())
    ((:dog_positions __dog_positions) ())
    )
   (send-super :init)
   (setq _people_positions __people_positions)
   (setq _cat_positions __cat_positions)
   (setq _dog_positions __dog_positions)
   self)
  (:people_positions
   (&rest __people_positions)
   (if (keywordp (car __people_positions))
       (send* _people_positions __people_positions)
     (progn
       (if __people_positions (setq _people_positions (car __people_positions)))
       _people_positions)))
  (:cat_positions
   (&rest __cat_positions)
   (if (keywordp (car __cat_positions))
       (send* _cat_positions __cat_positions)
     (progn
       (if __cat_positions (setq _cat_positions (car __cat_positions)))
       _cat_positions)))
  (:dog_positions
   (&rest __dog_positions)
   (if (keywordp (car __dog_positions))
       (send* _dog_positions __dog_positions)
     (progn
       (if __dog_positions (setq _dog_positions (car __dog_positions)))
       _dog_positions)))
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/Pose[] _people_positions
    (apply #'+ (send-all _people_positions :serialization-length)) 4
    ;; geometry_msgs/Pose[] _cat_positions
    (apply #'+ (send-all _cat_positions :serialization-length)) 4
    ;; geometry_msgs/Pose[] _dog_positions
    (apply #'+ (send-all _dog_positions :serialization-length)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/Pose[] _people_positions
     (write-long (length _people_positions) s)
     (dolist (elem _people_positions)
       (send elem :serialize s)
       )
     ;; geometry_msgs/Pose[] _cat_positions
     (write-long (length _cat_positions) s)
     (dolist (elem _cat_positions)
       (send elem :serialize s)
       )
     ;; geometry_msgs/Pose[] _dog_positions
     (write-long (length _dog_positions) s)
     (dolist (elem _dog_positions)
       (send elem :serialize s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/Pose[] _people_positions
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _people_positions (let (r) (dotimes (i n) (push (instance geometry_msgs::Pose :init) r)) r))
     (dolist (elem- _people_positions)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;; geometry_msgs/Pose[] _cat_positions
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _cat_positions (let (r) (dotimes (i n) (push (instance geometry_msgs::Pose :init) r)) r))
     (dolist (elem- _cat_positions)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;; geometry_msgs/Pose[] _dog_positions
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _dog_positions (let (r) (dotimes (i n) (push (instance geometry_msgs::Pose :init) r)) r))
     (dolist (elem- _dog_positions)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;;
   self)
  )

(setf (get second_coursework::PatrolResult :md5sum-) "19944e0b20a2274c6da955fe1e2bfa5a")
(setf (get second_coursework::PatrolResult :datatype-) "second_coursework/PatrolResult")
(setf (get second_coursework::PatrolResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Result
geometry_msgs/Pose[] people_positions
geometry_msgs/Pose[] cat_positions
geometry_msgs/Pose[] dog_positions

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :second_coursework/PatrolResult "19944e0b20a2274c6da955fe1e2bfa5a")


