;; Auto-generated. Do not edit!


(when (boundp 'second_coursework::PatrolResult)
  (if (not (find-package "SECOND_COURSEWORK"))
    (make-package "SECOND_COURSEWORK"))
  (shadow 'PatrolResult (find-package "SECOND_COURSEWORK")))
(unless (find-package "SECOND_COURSEWORK::PATROLRESULT")
  (make-package "SECOND_COURSEWORK::PATROLRESULT"))

(in-package "ROS")
;;//! \htmlinclude PatrolResult.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass second_coursework::PatrolResult
  :super ros::object
  :slots (_person_poses _cat_poses _dog_poses ))

(defmethod second_coursework::PatrolResult
  (:init
   (&key
    ((:person_poses __person_poses) ())
    ((:cat_poses __cat_poses) ())
    ((:dog_poses __dog_poses) ())
    )
   (send-super :init)
   (setq _person_poses __person_poses)
   (setq _cat_poses __cat_poses)
   (setq _dog_poses __dog_poses)
   self)
  (:person_poses
   (&rest __person_poses)
   (if (keywordp (car __person_poses))
       (send* _person_poses __person_poses)
     (progn
       (if __person_poses (setq _person_poses (car __person_poses)))
       _person_poses)))
  (:cat_poses
   (&rest __cat_poses)
   (if (keywordp (car __cat_poses))
       (send* _cat_poses __cat_poses)
     (progn
       (if __cat_poses (setq _cat_poses (car __cat_poses)))
       _cat_poses)))
  (:dog_poses
   (&rest __dog_poses)
   (if (keywordp (car __dog_poses))
       (send* _dog_poses __dog_poses)
     (progn
       (if __dog_poses (setq _dog_poses (car __dog_poses)))
       _dog_poses)))
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/Pose[] _person_poses
    (apply #'+ (send-all _person_poses :serialization-length)) 4
    ;; geometry_msgs/Pose[] _cat_poses
    (apply #'+ (send-all _cat_poses :serialization-length)) 4
    ;; geometry_msgs/Pose[] _dog_poses
    (apply #'+ (send-all _dog_poses :serialization-length)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/Pose[] _person_poses
     (write-long (length _person_poses) s)
     (dolist (elem _person_poses)
       (send elem :serialize s)
       )
     ;; geometry_msgs/Pose[] _cat_poses
     (write-long (length _cat_poses) s)
     (dolist (elem _cat_poses)
       (send elem :serialize s)
       )
     ;; geometry_msgs/Pose[] _dog_poses
     (write-long (length _dog_poses) s)
     (dolist (elem _dog_poses)
       (send elem :serialize s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/Pose[] _person_poses
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _person_poses (let (r) (dotimes (i n) (push (instance geometry_msgs::Pose :init) r)) r))
     (dolist (elem- _person_poses)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;; geometry_msgs/Pose[] _cat_poses
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _cat_poses (let (r) (dotimes (i n) (push (instance geometry_msgs::Pose :init) r)) r))
     (dolist (elem- _cat_poses)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;; geometry_msgs/Pose[] _dog_poses
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _dog_poses (let (r) (dotimes (i n) (push (instance geometry_msgs::Pose :init) r)) r))
     (dolist (elem- _dog_poses)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;;
   self)
  )

(setf (get second_coursework::PatrolResult :md5sum-) "36b4977d3d4e148dd8c6328523d75894")
(setf (get second_coursework::PatrolResult :datatype-) "second_coursework/PatrolResult")
(setf (get second_coursework::PatrolResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Result
geometry_msgs/Pose[] person_poses
geometry_msgs/Pose[] cat_poses
geometry_msgs/Pose[] dog_poses

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :second_coursework/PatrolResult "36b4977d3d4e148dd8c6328523d75894")


